---

- name: Create group certbot
  become: true
  become_method: "{{ certbot_custom_become_method }}"
  ansible.builtin.group:
    name: "{{ certbot_group }}"
    state: present

- name: Install required package
  become: true
  become_method: "{{ certbot_custom_become_method }}"
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop: "{{ certbot_package}}"

- name: Create certbot directory
  become: true
  become_method: "{{ certbot_custom_become_method }}"
  ansible.builtin.file:
    path: "{{ item.path }}"
    owner: "{{ item.owner | default(certbot_owner) }}"
    group: "{{ item.group | default(certbot_group) }}"
    mode: "{{ item.mode | default('0750') }}"
    state: "{{ item.state | default('directory') }}"
  loop: "{{ certbot_directories }}"

- name: Template certbot files
  become: true
  become_method: "{{ certbot_custom_become_method }}"
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default(certbot_owner) }}"
    group: "{{ item.group | default(certbot_group) }}"
    mode: "{{ item.mode | default('0640') }}"
  loop: "{{ certbot_templates }}"

- name: Creates a cron file under /etc/cron.d to auto renew certificat
  become: true
  become_method: "{{ certbot_custom_become_method }}"
  ansible.builtin.cron:
    name: certbot auto renew
    weekday: "0"
    minute: "0"
    hour: "12"
    user: root
    job: "sh {{ certbot_root_dir }}/certbot.sh"
    cron_file: certbot_auto_renew

- name: Clean live cert
  become: true
  become_method: "{{ certbot_custom_become_method }}"
  ansible.builtin.file:
    path: /etc/letsencrypt/live/
    state: absent
  when: certbot_clean_previous_install

- name: Check if certbot has already been run at least once
  become: true
  become_method: "{{ certbot_custom_become_method }}"
  ansible.builtin.stat:
    path: "/etc/letsencrypt/live/{{ ansible_host }}/cert.pem"
  register: certbot_already_executed

- name: Run at least once the shell script
  become: true
  become_method: "{{ certbot_custom_become_method }}"
  become_user: "{{ certbot_owner }}"
  ansible.builtin.shell: "sh {{ certbot_root_dir }}/certbot.sh"
  when: not certbot_already_executed.stat.exists or certbot_force_renew

