---

- name: Import grafana gpg key
  become: true
  become_method: "{{ grafana_custom_become_method }}"
  ansible.builtin.apt_key:
    url: "{{ item }}"
    state: present
  loop: "{{ grafana_gpg_key }}"

- name: Add grafana repo
  become: true
  become_method: "{{ grafana_custom_become_method }}"
  ansible.builtin.apt_repository:
    repo: "deb {{ item }}"
    state: present
  loop: "{{ grafana_deb}}"

- name: Install binaries for grafana
  become: true
  become_method: "{{ grafana_custom_become_method }}"
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop: "{{ grafana_packages }}"

- name: Create Grafana folder
  become: true
  become_method: "{{ grafana_custom_become_method }}"
  ansible.builtin.file:
    state: directory
    path: "{{ item.path }}"
    owner: "{{ item.owner | default(grafana_owner) }}"
    group: "{{ item.group | default(grafana_group) }}"
    mode: "{{ item.mode | default('0750') }}"
    recurse: true
  loop: "{{ grafana_directories }}"

- name: Source ssl file from certbot
  become: true
  become_method: "{{ grafana_custom_become_method }}"
  ansible.builtin.file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ grafana_owner }}"
    group: "{{ grafana_group }}"
    state: link
  loop: "{{ grafana_ssl_file }}"

- name: Template config files
  become: true
  become_method: "{{ grafana_custom_become_method }}"
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default(grafana_owner) }}"
    group: "{{ item.group | default(grafana_group) }}"
    mode: "{{ item.mode | default('0640') }}"
  loop: "{{ grafana_custom_configs }}"
  when: grafana_custom_configs is defined
  notify: grafana_need_restart
