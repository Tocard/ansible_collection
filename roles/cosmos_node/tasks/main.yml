---

- name: Run Prepare task
  ansible.builtin.import_tasks: node_prepare.yml

#- name: Donwload & extract cosmos_node Binary
#  become: true
#  become_method: "{{ cosmos_node_sudo_method }}"
#  ansible.builtin.get_url:
#    url: "{{ cosmos_node_binaries_download_url}}"
#    dest: "{{ cosmos_node_binaries_path }}/{{ cosmos_node }}"
#    owner: "{{ item.owner | default(cosmos_node_owner) }}"
#    group: "{{ item.group | default(cosmos_node_group) }}"
#    mode: "0777"
#    force: true

- name: Donwload & extract cosmos_node Binary
  become: true
  become_method: "{{ cosmos_node_sudo_method }}"
  ansible.builtin.unarchive:
    src: "{{ cosmos_node_binaries_download_url}}"
    dest: "{{ cosmos_node_binaries_path }}/{{ cosmos_node }}"
    owner: "{{ item.owner | default(cosmos_node_owner) }}"
    group: "{{ item.group | default(cosmos_node_group) }}"
    remote_src: true
    mode: "0777"

- name: Check if node_marker is present
  become: true
  become_method: "{{ cosmos_node_sudo_method }}"
  ansible.builtin.stat:
    path: "{{ cosmos_node_path }}/config/privkey_validator.json"
  register: cosmos_node_already_init

- name: Run take node config
  become: true
  become_user: "{{ cosmos_node_owner }}"
  ansible.builtin.import_tasks: node_init.yml
  when: not cosmos_node_already_init.stat.exists

- name: Template cosmos_node config
  become: true
  become_method: "{{ cosmos_node_sudo_method }}"
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode | default('0640') }}"
    owner: "{{ item.owner | default(cosmos_node_owner) }}"
    group: "{{ item.group | default(cosmos_node_group) }}"
  loop: "{{ cosmos_node_templates }}"
  notify: cosmos_node_need_restart

#- name: Setup config file
#  become: true
#  ansible.builtin.lineinfile:
#    path: "{{ item.path }}"
#    regexp: "{{ item.regexp }}"
#    line: "{{ item.line }}"
#  loop: "{{ cosmos_node_config_replacement }}"
#
#- name: Get Genesis
#  become: true
#  become_method: "{{ cosmos_node_sudo_method }}"
#  ansible.builtin.unarchive:
#    src: "{{ cosmos_node_genesis_donwload_url }}"
#    dest: "{{ cosmos_node_config_path }}"
#    remote_src: true
#    owner: "{{ item.owner | default(cosmos_node_owner) }}"
#    group: "{{ item.group | default(cosmos_node_group) }}"


#- name: Run th keys management
#  become: true
#  become_user: "{{ cosmos_node_owner }}"
#  ansible.builtin.import_tasks: keys_management.yml
#  when: cosmos_node_keys_management_enabled

