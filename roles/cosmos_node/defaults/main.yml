---

cosmos_node: nibiru
cosmos_node_short_name: nibid
cosmos_node_chain_id: cataclysm-1

# USER
cosmos_node_owner: "{{ cosmos_node }}"
cosmos_node_group: "{{ cosmos_node }}"


# SYSTEM
## OS
cosmos_node_packages:
  - jq
  - curl
  - acl

## FOLDER
cosmos_node_log_path: "/var/log/{{ cosmos_node }}"
cosmos_node_binaries_path: /usr/bin/
cosmos_node_path: "/opt/{{ cosmos_node }}/{{ cosmos_node_chain_id }}"
cosmos_node_config_path: "{{ cosmos_node_path }}/config"

cosmos_node_directories:
  - path: "{{ cosmos_node_path }}"
  - path: "{{ cosmos_node_config_path }}"
  - path: "{{ cosmos_node_log_path }}"

## FILESYSTEM
cosmos_node_vg_name: olympus
cosmos_node_data_disk_name: sdb
cosmos_node_log_lv_name: "lv_log_{{ cosmos_node }}"
cosmos_node_log_size: 2g
cosmos_node_filesystem_list:
  - disk: "{{ cosmos_node_data_disk_name }}"
    path: "{{ cosmos_node_path }}"
    owner: "{{ cosmos_node_owner }}"
    group: "{{ cosmos_node_group }}"
    direct_mount: true
  - lv: "{{ cosmos_node_log_lv_name }}"
    vg: "{{ cosmos_node_vg_name }}"
    size: "{{ cosmos_node_log_size }}"
    path: "{{ cosmos_node_log_path }}"
    owner: "{{ cosmos_node_owner }}"
    group: "{{ cosmos_node_group }}"

## FILE
cosmos_node_log_file: "{{ cosmos_node}}.log"


# NODE
cosmos_node_moniker: "{{ ansible_hostname }}"

cosmos_node_genesis_location: "{{ cosmos_node_config_path }}/genesis.json"
cosmos_node_config_toml_path: "{{ cosmos_node_config_path }}/config.toml"
cosmos_node_app_toml_path: "{{cosmos_node_config_path }}/app.toml"


## NODE CONFIG
cosmos_node_p2p_port: 26656
cosmos_node_p2p_external_address_enabled: false
cosmos_node_p2p_external_port: "{{ cosmos_node_p2p_port }}"
cosmos_node_p2p_external_address: ""

cosmos_node_log_format: json
cosmos_node_log_level: info

cosmos_node_upnp_enabled: false
cosmos_node_prometheus_enabled: true
cosmos_node_prometheus_port: ":26660"
cosmos_node_prometheus_namespace: cometbft

## NODE APP
cosmos_node_linimum_gas_price: "0.5{{ cosmos_node_denom }}"

cosmos_node_templates:
  - src: "{{ cosmos_node }}.service.j2"
    dest: /etc/systemd/system/"{{ cosmos_node }}.service"
#  - src: app.toml.j2
#    dest: "{{ cosmos_node_app_toml_path}}"
#  - src: config.toml.j2
#    dest: "{{ cosmos_node_config_toml_path}}"


#CONVERT TO PARAM

cosmos_node_version: 1.3.0
cosmos_node_base_url: https://github.com/NibiruChain/nibiru/releases/download
cosmos_node_arch: linux_amd64
cosmos_node_binaries_download_url: "{{ cosmos_node_base_url }}/v{{ cosmos_node_version }}/nibid_{{ cosmos_node_version }}_{{ cosmos_node_arch }}.tar.gz"

cosmos_node_genesis_donwload_url:

cosmos_node_seeds:
cosmos_node_persistent_peers:

cosmos_node_binaries:
cosmos_node_denom:

# Database backend: goleveldb | cleveldb | boltdb | rocksdb | badgerdb
# * goleveldb (github.com/syndtr/goleveldb - most popular implementation)
#   - pure go
#   - stable
# * cleveldb (uses levigo wrapper)
#   - fast
#   - requires gcc
#   - use cleveldb build tag (go build -tags cleveldb)
# * boltdb (uses etcd's fork of bolt - github.com/etcd-io/bbolt)
#   - EXPERIMENTAL
#   - may be faster is some use-cases (random reads - indexer)
#   - use boltdb build tag (go build -tags boltdb)
# * rocksdb (uses github.com/tecbot/gorocksdb)
#   - EXPERIMENTAL
#   - requires gcc
#   - use rocksdb build tag (go build -tags rocksdb)
# * badgerdb (uses github.com/dgraph-io/badger)
#   - EXPERIMENTAL
#   - use badgerdb build tag (go build -tags badgerdb)
cosmos_node_database_backend: goleveldb


cosmos_node_sudo_method: sudo
